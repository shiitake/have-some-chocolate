<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>sqlpackage</id>
    <version>162.2.111</version>
    <title>SqlPackage</title>
    <authors>Microsoft</authors>
    <owners>Shannon Barrett</owners>
    <licenseUrl>https://docs.microsoft.com/en-us/legal/sql/data-tier-application-framework-license-terms</licenseUrl>
    <projectUrl>https://docs.microsoft.com/en-us/sql/tools/sqlpackage?view=sql-server-ver16</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>SqlPackage.exe is a command-line utility that automates the following database development tasks:

* Version: Returns the build number of the SqlPackage application. Added in version 18.6.
* Extract: Creates a database snapshot (`.dacpac`) file from a live SQL Server or Azure SQL Database.
* Publish: Incrementally updates a database schema to match the schema of a source `.dacpac` file. If the database does not exist on the server, the publish operation creates it. Otherwise, an existing database is updated.
* Export: Exports a live database - including database schema and user data - from SQL Server or Azure SQL Database to a BACPAC package (`.bacpac` file).
* Import: Imports the schema and table data from a BACPAC package into a new user database in an instance of SQL Server or Azure SQL Database.
* DeployReport: Creates an XML report of the changes that would be made by a publish action.
* DriftReport: Creates an XML report of the changes that have been made to a registered database since it was last registered.
* Script: Creates a Transact-SQL incremental update script that updates the schema of a target to match the schema of a source.
    </description>
    <summary>SqlPackage is a command-line utility that automates database development tasks</summary>
    <releaseNotes>### Features  

- Platform: References Microsoft.Data.SqlClient v5.1.4. 
- Platform: SqlPackage self-contained (.zip) downloads are now built with .NET 8.
- Platform: SqlPackage dotnet tool is not available for both .NET 6 and .NET 8.    
- Platform: SqlPackage preview releases are not available in the dotnet tool feed.
- Azure Synapse Analytics: Added validation to the DW_COMPATIBILITY_LEVEL project property to ensure that the value is within the valid options of 0, 10, 20, 30, 40, 50, 9000 during project build.
- Deployment: Adds support for ONLINE index operations. Online index operations can be applied as a SqlPackage command line publish property, /p:PerformIndexOperationsOnline, and as a component in the SQL project model.
- Parquet: Improvements to extract and publish operations with data in Parquet files, including performance improvements with parallel import of data and log file size reduction.

### Fixes

- Deployment: Fixed an issue where packages with functions used in the apply clause of a view would fail to deploy. The previous error message was that the function was not found because the view was incorrectly deployed before the function. 
- Deployment: Fixed an issue where function keywords such as NATIVE_COMPILATION and SCHEMABINDING were not correctly recognized and included in the deployment script. 
- Deployment: Fixed an issue where references to system tables in a values clause would fail to build with an error message that the Value cannot be null. 
- Deployment: Fixed an issue where the absolute paths of referenced dacpacs were stored in the dacpac after project build instead of the relative paths. 
- Deployment: Fixed an issue where the creation of a disabled clustered index would cause the deployment to fail if another disabled index was to be created.
- Deployment: Fixed an issue where a synonym to user-defined data types resulted in an unresolved reference.
- Extract: Fixed an issue where the DacVersion property was not being set if a version was specified for the package that did not follow major.minor.build format. 
- Import: Fixed an issue where certain collations, including Chinese_PRC_CI_AS, would fail to import with an error message that the collation was not supported. 
- Schema compare: Fixed an issue where databases with UTF8 collation would not give the correct result.
- Schema compare: Fixed an issue where schema compare would not include external data source, external file format, and external table objects when evaluating Synapse serverless SQL pools.
- Security: Fixed SqlPackage on .NET support for universal authentication (/ua), which supports Microsoft Entra ID authentication with multi-factor authentication (MFA).
- System dacpacs: Fixed an issue where the pdw* views were not included in the Synapse Data Warehouse master.dacpac. 

### Known Issues

- Deployment: The Azure Synapse Analytics Workload Management feature (Workload Groups and Workload Classifiers) isn't yet supported.
- Import: A bacpac file created with SqlPackage export, except when installed by the .msi file, may fail to import with the Azure portal and Azure PowerShell when larger than 4 GB.	Import the bacpac with SqlPackage or create the bacpac file with SqlPackage installed by the .msi file. (Workaround:Import the bacpac with SqlPackage or create the bacpac file with SqlPackage installed by the .msi file.)
- ScriptDOM: Parsing a very large file can result in a stack overflow

    </releaseNotes>
    <tags>sqlpackage dacfx</tags>
    <packageSourceUrl>https://github.com/shiitake/have-some-chocolate</packageSourceUrl>
    <docsUrl>https://learn.microsoft.com/en-us/sql/tools/sqlpackage/sqlpackage?view=sql-server-ver16</docsUrl>
  </metadata>
    <files>    
      <file src="tools\**" target="tools" />    
  </files>
</package>
